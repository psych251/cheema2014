unlink('Replication Report_cheema2014_cache', recursive = TRUE)
options(repos=structure(c(CRAN="YOUR FAVORITE MIRROR")))
local({r <- getOption("repos")
r["CRAN"] <- "https://cloud.r-project.org"
options(repos=r)
})
pisa_5persample_rm = pisa_5persample %>%
rowwise() %>%
filter(is.na(math_achievement2))
colnames(pisa_5persample)
pisa <-read.csv(url)
url <- '/Users/radhika/Documents/Stanford readings/251 Experimental methods/Project/cheema2014/PISA data/Extracted data/PISA 2003 Student Background.csv'
pisa <-read.csv(url)
## Load Relevant Libraries and Functions
## Default repo
##local({r <- getOption("repos")
##       r["CRAN"] <- "https://cloud.r-project.org"
##       options(repos=r)
##})
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(readr)
install.packages("mice")  #package for regression imputation
library("mice")
library(sandwich)
library(mitools)
library(texreg)
#?sandwich
#install.packages("sandwich")
#install.packages(mitools)
#install.packages("texreg")
#### Import data
url <- '/Users/radhika/Documents/Stanford readings/251 Experimental methods/Project/cheema2014/PISA data/Extracted data/PISA 2003 Student Background.csv'
pisa <-read.csv(url)
install.packages("mice")
# Variables selected are: IDs, gender, math anxiety, household, education resources, plausible values for math and reading
#### Prepare data for analysis - create columns etc.
####Calculate mean
pisa = pisa %>%
rowwise() %>%
mutate(math_achievement = mean(c(PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH))) %>%
mutate(read_achievement=mean(c(PV1READ, PV2READ, PV3READ, PV4READ, PV5READ)))
#### Data exclusion / filtering
pisa = pisa %>%
rename(student_gender = ST03Q01, studentID=STIDSTD) %>%
select(c("studentID", "SCHOOLID", "student_gender","ANXMAT", "HEDRES", "math_achievement", "read_achievement"))
head(pisa)
nrow(pisa)
colnames(pisa)
summary(pisa)
#Paper says math and reading scores are normally distributed - plotting to check
ggplot(pisa, aes(x=math_achievement)) + geom_histogram()
ggplot(pisa, aes(x=read_achievement)) + geom_histogram()
#Check for outliers in variables of interest
colnames(pisa)
unique(pisa$student_gender)
unique(pisa$HEDRES)
#Check outliers in math anxiety
ggplot(pisa, aes(x=ANXMAT)) + geom_histogram()
#Student gender, Math anxiety seems to have outliers - checking to see all possible values in it
pisa_filter=pisa %>%
mutate(ANXMAT=replace(ANXMAT, ANXMAT>=999, NA)) %>%
mutate(HEDRES=replace(HEDRES, HEDRES>=999, NA)) %>%
filter(student_gender<3,
!is.na(student_gender))
mean_anxmat <- mean(pisa_filter$ANXMAT, na.rm=T)
sd_anxmat <- sd(pisa_filter$ANXMAT, na.rm=T)
mean_hedres <- mean(pisa_filter$HEDRES, na.rm=T)
sd_hedres <- sd(pisa_filter$HEDRES, na.rm=T)
pisa_filter=pisa_filter %>%
mutate(ANXMAT=replace(ANXMAT, ANXMAT>=999, NA)) %>%
mutate(HEDRES=replace(HEDRES, HEDRES>=999, NA)) %>%
filter(student_gender<3,
!is.na(student_gender)) %>%
mutate(stdANXMAT= (ANXMAT-mean_anxmat)/sd_anxmat) %>%
mutate(stdHEDRES= (HEDRES-mean_hedres)/sd_hedres)
#Drop 5% of the PISA data
set.seed(123)
pisa_filter <- pisa_filter %>%
mutate(rv = rnorm(n())) %>%
arrange(rv)
cutoff_5per <-5183 #Cheema (2014) rounded off 95% of 5455 obs as 5182, preserving that
cutoff_10per <-4911 #Cheema (2014) rounded off 90% of 5455 obs as 4910
pisa_5persample <- sample_frac(pisa_filter, 0.95)
pisa_5persample <- pisa_filter %>%
tibble::rowid_to_column("new_rowid") %>%
mutate(math_achievement2= ifelse(new_rowid<(cutoff_5per),math_achievement,NA)) %>%
select(-c(new_rowid))
pisa_10persample <- pisa_filter %>%
tibble::rowid_to_column("new_rowid") %>%
mutate(math_achievement2= ifelse(new_rowid<(cutoff_10per),math_achievement,NA)) %>%
select(-c(new_rowid)) %>%
select(-c(ANXMAT, HEDRES,math_achievement, rv))
summary(pisa_filter)
lm_fulldata=lm(math_achievement ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=pisa_filter)
summary(lm_fulldata)
#List wise deletion is the same as not making any adjustments to the missing data
lm_ld_5per=lm(math_achievement2 ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=pisa_5persample)
summary(lm_ld_5per)
#Values of math_achievement2 will be replaced by the mean of the column
mean_math <- mean(pisa_5persample$math_achievement2, na.rm = T) #calculate mean score to be used for imputation
mean_math
pisa_5persample <- pisa_5persample %>%
rowwise() %>%
mutate(math_mi=ifelse(is.na(math_achievement2),mean_math,math_achievement2))
rm(mean_math)
#Run the regression using the imputed mean
lm_mi_5per=lm(math_mi ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=pisa_5persample)
summary(lm_mi_5per)
colnames(pisa_5persample)
```
pisa_5persample_rm = pisa_5persample %>%
rowwise() %>%
filter(is.na(math_achievement2))
summary(pisa_5persample_rm)
math_ri_5per <- lm(pisa_5persample, math_achievement2 ~ student_gender + stdHEDRES + stdANXMAT + read_achievement)
math_ri_5per <- lm(pisa_5persample, math_achievement2 ~ student_gender + stdHEDRES + stdANXMAT + read_achievement)
summary(pisa_5persample)
lm_ri_5per <- lm(math_achievement2 ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=math_ri_5per)
lm_ri_5per <- lm(math_achievement2 ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=pisa_5persample)
#Drop 5% of the PISA data
set.seed(123)
pisa_filter <- pisa_filter %>%
mutate(rv = rnorm(n())) %>%
arrange(rv)
cutoff_5per <-5183 #Cheema (2014) rounded off 95% of 5455 obs as 5182, preserving that
cutoff_10per <-4911 #Cheema (2014) rounded off 90% of 5455 obs as 4910
pisa_5persample <- sample_frac(pisa_filter, 0.95)
pisa_5persample <- pisa_filter %>%
tibble::rowid_to_column("new_rowid") %>%
mutate(math_achievement2= ifelse(new_rowid<(cutoff_5per),math_achievement,NA)) %>%
select(-c(new_rowid))
pisa_10persample <- pisa_filter %>%
tibble::rowid_to_column("new_rowid") %>%
mutate(math_achievement2= ifelse(new_rowid<(cutoff_10per),math_achievement,NA)) %>%
select(-c(new_rowid)) %>%
select(-c(ANXMAT, HEDRES,math_achievement, rv))
#Values of math_achievement2 will be replaced by the mean of the column
mean_math <- mean(pisa_5persample$math_achievement2, na.rm = T) #calculate mean score to be used for imputation
mean_math
pisa_5persample_mi <- pisa_5persample %>%
rowwise() %>%
mutate(math_mi=ifelse(is.na(math_achievement2),mean_math,math_achievement2))
#Run the regression using the imputed mean
lm_mi_5per=lm(math_mi ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=pisa_5persample_mi)
summary(lm_mi_5per)
colnames(pisa_5persample)
```
pisa_5persample_rm = pisa_5persample %>%
rowwise() %>%
filter(is.na(math_achievement2))
summary(pisa_5persample_rm)
lm_ri_5per <- lm(math_achievement2 ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=pisa_5persample_rm)
summary(pisa_5persample_rm)
lm_ri_5per <- lm(math_achievement2 ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=pisa_5persample_rm)
pisa_5persample_rm = pisa_5persample %>%
rowwise() %>%
filter(!is.na(math_achievement2))
summary(pisa_5persample_rm)
lm_ri_5per <- lm(math_achievement2 ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=pisa_5persample_rm)
summary(lm_ri_5per)
md.pattern(pisa_5persample, plot = F)
imp <- mice(pisa_5persample, m=5, maxit=10, meth='norm.nob',seed=500, printFlag = F)
#mice is the package for performing  imputations
#m=5: number of multiple imputations i.e. 5 completed datasets will be generated
#maxit=10: number of iterations run
#norm.nob: stochastic regressions
complete(imp)
imp2=complete(imp)
imp2
View(imp2)
summary(imp2)
summary(imp)
imp2=complete(imp)
summary(imp2)
summary(pool(imp))
imp <- mice(pisa_5persample, m=5, maxit=10, meth='norm.nob',seed=500, printFlag = F)
summary(pool(imp))
summary(imp)
pool(imp)
summary(pool(imp))
imp <- mice(pisa_5persample, m=1,  meth='norm.nob')
imp2=complete(imp)
summary(imp2)
md.pattern(imp2)
imp <- mice(pisa_5persample, method = "norm.nob", m = 1) # Impute data
data_sto <- complete(imp) # Store datasummary(imp2)
summary(data_sto)
pisa_5persample_rm = pisa_5persample %>%
rowwise() %>%
filter(!is.na(math_achievement2)) %>%
relocate(math_achievement2)
View(pisa_5persample_rm)
md.pattern(pisa_5persample, plot = F)
md.pattern(imp, plot = F)
summary(data_sto)
imp <- mice(pisa_5persample, method = "norm.nob", m = 1) # Impute data
data_sto <- complete(imp) # Store datasummary(imp2)
summary(data_sto)
colnames(pisa_10persample)
colnames(pisa_5persample)
pisa_5persample <- pisa_filter %>%
tibble::rowid_to_column("new_rowid") %>%
mutate(math_achievement2= ifelse(new_rowid<(cutoff_5per),math_achievement,NA)) %>%
select(-c(new_rowid)) %>%
select(-c(ANXMAT, HEDRES,math_achievement, rv))
imp <- mice(pisa_5persample, method = "norm.nob", m = 1) # Impute data
data_sto <- complete(imp) # Store datasummary(imp2)
summary(data_sto)
imp2 <- complete(imp) # Store datasummary(imp2)
summary(imp2)
md.pattern(imp2)
lm_ri_5per=lm(math_achievement ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=imp2)
summary(imp2)
lm_ri_5per=lm(math_achievement2 ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=imp2)
summary(lm_ri_5per)
??pool_mi
install.packages("miceadds")
install.packages("miceadds")
library(miceadds)
library(norm)
pre <- prelim.norm(as.matrix(don))
?EM.imputation
??EM.imputation
library(norm)
pre <- prelim.norm(as.matrix(pisa_5persample))
View(pre)
pre
pre$r
thetahat <- em.norm(pre)
thetahat
thetahat <- em.norm(pre,showits = T)
getparam.norm(pre,thetahat)
getparam.norm(pre,thetahat)
imp <- imp.norm(pre,thetahat,pisa_5persample)
imp <- imp.norm(pre, thetahat, pisa_5persample)
pre <- prelim.norm(pisa_5persample) #arranges data in a matrix that can be used by the em function
imp <- imp.norm(pre, thetahat, as.matrix(pisa_5persample))
imp
summary(imp)
summary(pisa_5persample)
pre <- prelim.norm(as.data.frame(pisa_5persample)) #arranges data in a matrix that can be used by the em function
EM.imputation(math_achievement2 = NULL, group = NULL, pisa_5persample, imp = NULL, tol = 0.0001, maxit = 500, quiet = FALSE)
??EM.imputation
?EM.imputation
install.packages("EM.imputation")
install.packages("dlsem")
EM.imputation(math_achievement2 = NULL, group = NULL, pisa_5persample, imp = NULL, tol = 0.0001, maxit = 500, quiet = FALSE)
library(dlsem)
install.packages("dlsem")
library(dlsem)
install.packages("graph")
EM.imputation(math_achievement2 = NULL, group = NULL, pisa_5persample, imp = NULL, tol = 0.0001, maxit = 500, quiet = FALSE)
install.packages(" mvdalab")
install.packages("mvdalab")
library(mvdalab)
??imputeEM
imp = imputeEM(pisa_5persample, impute.ncomps = 2, pca.ncomps = 2, CV = TRUE, Init = "mean",
scale = TRUE, iters = 25, tol = .Machine$double.eps^0.25)
summary(imp)
summary(imp$Imputed.DataFrames)
implist <- miceadds::mids2datlist(imp)
implist
summary(pisa_filter)
which git
pisa_filter=pisa_filter %>%
mutate(ANXMAT=replace(ANXMAT, ANXMAT>=999, NA)) %>%
mutate(HEDRES=replace(HEDRES, HEDRES>=999, NA)) %>%
filter(student_gender<3,
!is.na(student_gender,stdANXMAT,stdHEDRES)) %>%
mutate(stdANXMAT= (ANXMAT-mean_anxmat)/sd_anxmat) %>%
mutate(stdHEDRES= (HEDRES-mean_hedres)/sd_hedres)
pisa_filter=pisa_filter %>%
mutate(ANXMAT=replace(ANXMAT, ANXMAT>=999, NA)) %>%
mutate(HEDRES=replace(HEDRES, HEDRES>=999, NA)) %>%
filter(student_gender<3,
!is.na(student_gender),
!is.na(stdANXMAT),
!ias.na(stdHEDRES)) %>%
mutate(stdANXMAT= (ANXMAT-mean_anxmat)/sd_anxmat) %>%
mutate(stdHEDRES= (HEDRES-mean_hedres)/sd_hedres)
pisa_filter=pisa_filter %>%
mutate(ANXMAT=replace(ANXMAT, ANXMAT>=999, NA)) %>%
mutate(HEDRES=replace(HEDRES, HEDRES>=999, NA)) %>%
filter(student_gender<3,
!is.na(student_gender),
!is.na(stdANXMAT),
!is.na(stdHEDRES)) %>%
mutate(stdANXMAT= (ANXMAT-mean_anxmat)/sd_anxmat) %>%
mutate(stdHEDRES= (HEDRES-mean_hedres)/sd_hedres)
#Drop 5% of the PISA data
set.seed(123)
pisa_filter <- pisa_filter %>%
mutate(rv = rnorm(n())) %>%
arrange(rv)
cutoff_5per <-5183 #Cheema (2014) rounded off 95% of 5455 obs as 5182, preserving that
cutoff_10per <-4911 #Cheema (2014) rounded off 90% of 5455 obs as 4910
pisa_5persample <- sample_frac(pisa_filter, 0.95)
pisa_5persample <- pisa_filter %>%
tibble::rowid_to_column("new_rowid") %>%
mutate(math_achievement2= ifelse(new_rowid<(cutoff_5per),math_achievement,NA)) %>%
select(-c(new_rowid)) %>%
select(-c(ANXMAT, HEDRES,math_achievement, rv))
pisa_10persample <- pisa_filter %>%
tibble::rowid_to_column("new_rowid") %>%
mutate(math_achievement2= ifelse(new_rowid<(cutoff_10per),math_achievement,NA)) %>%
select(-c(new_rowid)) %>%
select(-c(ANXMAT, HEDRES,math_achievement, rv))
summary(pisa_filter)
lm_fulldata=lm(math_achievement ~ student_gender + stdHEDRES + stdANXMAT + read_achievement, data=pisa_filter)
summary(lm_fulldata)
